#!/usr/bin/env bash

# WARNING: THIS IS MY PERSONAL SCRIPT WHEN I REINSTALL ARCH, IT MAY NOT WORK FOR YOU!

pkg_installed() {
	local PKG=$1
	if pacman -Qi $PKG &>/dev/null; then
		return 0
	else
		return 1
	fi
}

# Update
pacman -Syu --noconfirm
sleep 3 && clear

# Yay
echo "[*] Installing AUR helper(yay) ..."
if pkg_installed yay; then
	echo "[*] Yay already installed, skipping ..."
else
	git clone https://aur.archlinux.org/yay.git && cd yay
	makepkg -si
	cd .. && rm -rf yay
	echo "[*] Yay Installed."
fi
cd ~
sleep 3 && clear

# Install Dotf Branch
echo "[*] Installing dotfiles ..."
git clone https://github.com/sownteedev/dotfiles.git --branch=dotf ~/dotf
echo "[*] Done."
sleep 3 && clear

# Enable touchpad
echo "[*] Enable touchpad for laptop and set time to sleep ..."
read -p "[*] Do you want? (y/n): " choice
if [ "$choice" = "y" ] || [ "$choice" = "Y" ]; then
	cp ~/dotf/.local/other/30-touchpad.conf /etc/X11/xorg.conf.d/30-touchpad.conf
	cp ~/dotf/.local/other/30-dpms.conf /etc/X11/xorg.conf.d/30-dpms.conf
	echo "[*] Done."
else
	echo "[*] Skipped."
fi
sleep 3 && clear

# Xinitrc
echo "[*] Override .xinitrc ..."
rm -f ~/.xinitrc && cp ~/dotf/.xinitrc ~/.xinitrc
echo "[*] Done"
sleep 3 && clear

#################################################### INSTALL DRIVER AND APPS ####################################################
# Install library
echo "[*] Installing library ..."
pacman -S nodejs npm yarn python python-pip clang jdk-openjdk rustup cargo --noconfirm
echo "[*] Done."
sleep 3 && clear

# Audio
echo "[*] Installing audio & mic driver ..."
pacman -S pavucontrol pipewire pipewire-audio pipewire-pulse alsa-ucm-conf sof-firmware playerctl pamixer --noconfirm
systemctl --user enable pipewire pipewire-pulse wireplumber
echo "[*] Done."
sleep 3 && clear

# Brightness
echo "[*] Installing brightness ..."
pacman -S brightnessctl xorg-xbacklight redshift --noconfirm
echo "[*] Done."
sleep 3 && clear

# Battery
echo "[*] Installing battery ..."
pacman -S acpi acpid --noconfirm
systemctl enable acpid
echo "[*] Done."
sleep 3 && clear

# Network
echo "[*] Installing network ..."
pacman -S netctl networkmanager ifplugd dhcpcd dialog wpa_supplicant wireless_tools --noconfirm
systemctl enable NetworkManager dhcpcd
echo "[*] Done."
sleep 3 && clear

# Bluetooth
echo "[*] Installing bluetooth driver ..."
pacman -S bluez bluez-utils bluez-tools bluez-libs --noconfirm
systemctl enable bluetooth.service
sleep 3 && clear

# File manager
echo "[*] Installing file manager ..."
pacman -S thunar tumbler ranger ueberzug exa unzip unrar xdg-user-dirs gvfs vlc --noconfirm
echo "[*] Done."
sleep 3 && clear

# Monitor and Theme
echo "[*] Installing monitor and theme ..."
pacman -S feh maim viewnior lxappearance imagemagick neofetch arandr --noconfirm
echo "[*] Done."
sleep 3 && clear

# Other
echo "[*] Installing other ..."
pacman -S --noconfirm devtools xsettingsd gnome-keyring polkit-gnome libgnome-keyring seahorse pacman-contrib gpick btop github-cli xss-lock wget xdotool && yay -S --noconfirm auto-cpufreq picom-ftlabs-git rofi inotify-tools
echo "[*] Done."
clear
echo "[*] Install ibus"
yay -S ibus ibus-bamboo --noconfirm
env DCONF_PROFILE=ibus dconf write /desktop/ibus/general/preload-engines "['xkb:us::eng', 'Bamboo']" && gsettings set org.gnome.desktop.input-sources sources "[('xkb', 'us'), ('ibus', 'Bamboo')]"
mkdir ibus-bamboo && cd ibus-bamboo
wget "https://raw.githubusercontent.com/BambooEngine/ibus-bamboo/master/archlinux/PKGBUILD-$VER" -O PKGBUILD
makepkg -si
cd .. && rm -rf ibus-bamboo
sleep 3 && clear

# Fix Driver audio (for me)
pacman -S rsync --noconfirm && cd ~
mkdir -p ~/old-sof-backup
mv /lib/firmware/intel/sof* ~/old-sof-backup
mv /usr/local/bin/sof-* ~/old-sof-backup

git clone https://github.com/thesofproject/sof-bin.git && cd sof-bin/v2.1.x
rsync -a sof*v2.1.1 /lib/firmware/intel/
ln -s sof-v2.1.1 /lib/firmware/intel/sof
ln -s sof-tplg-v2.1.1 /lib/firmware/intel/sof-tplg
rsync tools-v2.1.1/* /usr/local/bin

cd ~ && git clone https://github.com/thesofproject/alsa-ucm-conf.git && cd alsa-ucm-conf
rm -r /usr/share/alsa/ucm
mv ./ucm /usr/share/alsa

cd ~ && rm -rf sof-bin alsa-ucm-conf old-sof-backup
echo "[*] Done."
sleep 3 && clear

# App for me
pacman -S --noconfirm libreoffice-fresh telegram-desktop easyeffects zsh
yay -S --noconfirm notion-app-electron intellij-idea-ultimate-edition intellij-idea-ultimate-edition-jre webstorm webstorm-jre pycharm-professional docker-desktop postman-bin ulauncher-git appimagelauncher-bin
pacman -Rns docker-desktop-debug --noconfirm
yay -S visual-studio-code-bin --noconfirm
echo "[*] Done."
