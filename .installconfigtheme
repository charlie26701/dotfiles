#!/usr/bin/env bash

pkg_installed() {
	local PKG=$1
	if pacman -Qi $PKG &>/dev/null; then
		return 0
	else
		return 1
	fi
}
cd ~

# Font
pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji --noconfirm
echo "[*] Copy fonts ..."
mkdir -p ~/.fonts && cp -r ~/dotf/.fonts/* ~/.fonts
fc-cache -fv
echo "[*] Done."
sleep 3 && clear

# Icon theme && Cursor theme
echo "[*] Copy icons ..."
mkdir -p ~/.icons && cp -r ~/dotf/.icons/* ~/.icons
echo "[*] Done."
sleep 3 && clear

# Themes
echo "[*] Copy themes ..."
mkdir -p ~/.themes && cp -r ~/dotf/.themes/* ~/.themes
echo "[*] Done."
sleep 3 && clear

# Wallpaper
echo "[*] Copy wallpaper ..."
mkdir -p ~/.walls && cp -r ~/dotf/.walls/* ~/.walls
echo "[*] Done."
sleep 3 && clear

# Config
echo "[*] Copy config ..."
if ! [ -d $HOME/.config ]; then
	mkdir -p $HOME/.config
fi
cp -r ~/dotf/.config/* ~/.config
echo "[*] Done."
sleep 3 && clear

# Local
echo "[*] Copy local ..."
if ! [ -d $HOME/.local ]; then
	mkdir -p $HOME/.local
fi
cp -r ~/dotf/.local/* ~/.local
echo "[*] Done."
sleep 3 && clear

# .Xresources
echo "[*] Copy .Xresources ..."
rm -f ~/.Xresources && cp ~/dotf/.Xresources ~/.Xresources
echo "[*] Done."
sleep 3 && clear

# .gtkrc-2.0
echo "[*] Copy .gtkrc-2.0 ..."
rm -f ~/.gtkrc-2.0 && cp ~/dotf/.gtkrc-2.0 ~/.gtkrc-2.0
echo "[*] Done."
sleep 3 && clear

##################### Install config WM #####################
read -p "[*] Do you want to use my WM configs? (1 for AwesomeWM/2 for mAWMcos/3 for AGS): " choice
if [ "$choice" = "1" ]; then
	echo "[*] Installing AwesomeWM ..."
	yay -S awesome-git lua-pam-git --noconfirm
	rm -rf ~/.config/awesome
	git clone https://github.com/sownteedev/dotfiles.git --branch=awesome ~/.config/awesome
	echo "[*] Done."
elif [ "$choice" = "2" ]; then
	echo "[*] Installing mAWMcos ..."
	yay -S awesome-git lua-pam-git --noconfirm
	rm -rf ~/.config/awesome
	git clone https://github.com/sownteedev/dotfiles.git --branch=mAWMcos ~/.config/awesome
	echo "[*] Done."
elif [ "$choice" = "3" ]; then
	echo "[*] Config for AGS is comming soon ^^"
fi
sleep 3 && clear

######################################## MY CONFIG FOR CUSTOM APPS #######################################

# Spotify
yay -S spotify --noconfirm
yay -S --noconfirm spicetify-cli-git
chmod a+wr /opt/spotify
chmod a+wr /opt/spotify/Apps -R
spicetify config current_theme Tetify color_scheme dark
echo "[*] Done."
sleep 3 && clear

# Firefox
echo "[*] Installing Firefox ..."
pacman -S firefox --noconfirm
git clone https://github.com/vinceliuice/WhiteSur-firefox-theme.git
cd WhiteSur-firefox-theme
./install.sh -a
cd .. && rm -rf ~/WhiteSur-firefox-theme
echo "[*] Done."
sleep 3 && clear

# Grtub Theme
git clone https://github.com/MrVivekRajan/Grub-Themes.git
cp -r Grub-Themes/* /boot/grub/themes/
sed -i 's/#GRUB_THEME=.*/GRUB_THEME=\/boot\/grub\/themes\/Anime\/theme.txt/g' /etc/default/grub
grub-mkconfig -o /boot/grub/grub.cfg
rm -rf ~/Grub-Themes
echo "[*] Done."
sleep 3 && clear

# Lightdm
yay -S --noconfirm lightdm lightdm-webkit2-greeter lightdm-webkit2-theme-glorious
systemctl enable lightdm
sed -i 's/#greeter-session=[^ ]*/greeter-session=lightdm-webkit2-greeter/' /etc/lightdm/lightdm.conf
sed -i 's/^webkit_theme\s*=\s*\(.*\)/webkit_theme = glorious #\1/g' /etc/lightdm/lightdm-webkit2-greeter.conf
sed -i 's/^debug_mode\s*=\s*\(.*\)/debug_mode = true #\1/g' /etc/lightdm/lightdm-webkit2-greeter.conf
cp ~/.walls/lockart.jpg /usr/share/backgrounds
echo "[*] Done."
sleep 3 && clear

# Install TeVim
echo "[*] Installing TeVim ..."
pacman -Rns neovim --noconfirm
yay -S --noconfirm lazygit xclip xsel fzf ripgrep neovim-nightly-bin
rm -rf ~/.config/nvim
git clone https://github.com/sownteedev/TeVim.git --depth 1 ~/.config/nvim
cp -r ~/dotf/.config/nvim/lua/custom ~/.config/nvim/lua/
echo "[*] Done."
sleep 3 && clear

# App for me
echo "[*] Installing apps for me ..."
pacman -S --noconfirm libreoffice-fresh telegram-desktop easyeffects
yay -S --noconfirm notion-app-electron jetbrains-toolbox docker-desktop postman-bin ulauncher-git appimagelauncher-bin vmware-workstation caprine vesktop kdenlive-git
pacman -Rns docker-desktop-debug --noconfirm
yay -S visual-studio-code-bin --noconfirm
echo "[*] Done."
sleep 3 && clear

sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
